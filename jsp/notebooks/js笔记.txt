javascript的基本介绍

1.js是用于web开发的 脚本语言

脚本语言是什么？

（1）脚本语言往往不能独立使用，他和html/jsp/php/asp/asp.net配合使用

（2）脚本语言有自己的变量，控制函数，控制语句（分支，循环）

（3）脚本语句实际上是解释语言（即直接对源码进行执行）

（4）java程序 java -> class -> jvm js ->浏览器（js引擎来执行）

（5）javascript在客户端执行，有时候也可以在服务器端执行  ，因为js
是由浏览器来解释执行的，不同类型的浏览器对js的支持也不一样

（6）js开发工具的选择

eclipse


js的变量类型究竟怎样决定

1.js是弱数据类型语言
即：在定义变量的时候，统一使用var表示，甚至可以直接
不声明var直接使用

2.js严格区分大小写，html不区分大小写，但是标记通通区分大小写

3.js的变量类型是由js引擎决定的

var name="shun"   ;//name是字符串
var kk=2； //kk是数

var yy  ； //yy是undefined；


4.js的命名规范（变量/函数）

（1）使用 大小写字母，数字，下划线 命名
（2）不能以数字开头
（3）不能使用js的保留字
 (4)区分大小写
 （5）单行注释 //  多行注释/*  */


6.js的数据类型

（1）基本数据类型
分为：
  1.数值型
  2.字符串
  3.布尔型
  
  通过typeof可以看到变量的具体数据类型是什么
  举例：
  var v1="abc";
var v2=800;

window.alert("v1是"+typeof v1);
window.alert("v2是"+typeof v2);

特殊值

 出现 NaN(not a number)：
var a="abc";
window.alert(parseInt(a));

Infinity （无穷大）
window.alet(9/0);

有两个函数可以判断是否为NaN Infinity
window.alert(isNaN("abc")); //返回true

(2)复合类型
1.数组
2.对象

（3）特殊类型
1.null；

var a=null；

2.undefined；

window.alet(tt)  //报错，未定义

var aa；
window.alet(aa) //报错，未赋值




js数据类型的转换

1.自动转换

var a=123； //a是数值
a="hello"  //类型是string

2.强制转换
比如：

var a="123456"

a=parseint(a) //使用系统函数强制转换

var b=90； //b是number

b=b+"";  //b是string




js的运算符

加 +
减-
乘*
除/
 取模%（计算两个数余数）
 
 var a=90;
var b=6;

if(a%b==0)
	{
	window.alert("能整除");
	}
else
	{
	window.alert("不能整除");
	} 
	
	在逻辑运算中，0，"" ,false null, undefined NaN 均表示为false
除了上述这些为false，其他都为真，字符串也为真


在js中也有位运算和移位运算，其规范和java一样








javascript的基本控制语句

1.顺序控制

对编程而言，不控制流程就是顺序控制

2.分支控制

2.1 单分支
基本语法
if（条件表达式）
{

}

2.2双分支

基本语法
if（条件表达式）
{

}
else
{

}


2.3多分支

if(条件表达式)、
{
}
if(条件表达式)、
{
}
.....if()

2.4 switch

基本语法

switch(表达式)
{
case 常量1 ：
执行语句

break; //break作用就是跳出整个switch;

case 常量2：
执行语句

break;
....

default:
执行语句
break;
}

针对该案例我们可以得出：
（1）js的switch语句数据类型可以是js支持的任何类型（数组对象除外）;
（2）case后面的数据类型可以任意（数组和对象除外）;
（3）break作用是跳出整个switch循环;
（4）如果没有匹配则执行default;


for循环
基本语法

for(循环初值;循环条件; 条件增长)
{
循环语句
}


while循环
基本语法
while(循环条件)
{
循环语句
}


do while循环
先执行再进行条件判断，while是先判断再执行

do
{
执行语句
}
while(循环条件);



在ie8中，我们可以对js代码进行调试，尤其在页面复杂时候，这非常有用


js函数

1.为什么需要函数
2.函数的基本概念

为完成某一功能的代码（语句，指令）的集合

3.基本语法
function 函数名（）
{
函数表达式
}


如果其他html，php文件要调用该函数怎么办？

把上面的函数单独提出，写到js文件中，然后在需要的地方引入

在需要的文件中引入
<script language="javascript" src="路径.js"></script>


函数调用的方式
1.普通调用
函数名（实际参数）

2.通过指向函数的变量去调用

var myvar=函数名；
myval（实际参数）

直接写函数名会打出函数内容
window.alert(test);

3.关于接受函数返回值的问题

var myvar=test('abc');
//如果test函数没有返回值，但是你又接受了，则返回undefined;
如果有返回值，则该返回什么就是什么


//数组
1.为什么需要数组

看一个需求：王大爷养乌龟 （600只龟求体重和）

2.解决方法
使用数组：这种数据类型（引用类型/复杂类型/复合类型），数组的基本
概念，用于存放一组数据

特别强调：js中的数组可以存放任何数据类型

3.数组的细节
基本用法：
（1）
var 数组名=[元素值，元素值....]
元素的值可以是任意类型
var an=[4,"hello"];

数组在内存中存在形式

（2）js中数组是引用传递

（3）数组的引用
基本用法：
数组的名称（下标）;
比如：var a=[23,"hello world",4.5];
我们访问a[2],则输出4.5;

如果我们访问a[3],a[4]
则输出undefined;

结论：不能访问不存在的元素
数组的下标是从0开始编号的
 
 （4）js的数组可以动态增长
 
 var a[5,6];
 var a[2];
 
 java和c++的数组内存早已分配好，不能动态增长
 
 （5）字符串拆分为数组
 var str="hello world abc 顺平";
 var arr=str.split(" ",3);//3表示只取前三个数组元素
 for(var i=0;i<arr.length;i++)
	 {
	 document.writeln(arr[i]+" ");
	 }
	 
	 （6）遍历特殊方法
	 
	 arr[45,90,0];
	 arr["gg"]=9000;
	 for(var key in arr)
	 {
	 window.alert(key+"="+arr[key]);
	 }
